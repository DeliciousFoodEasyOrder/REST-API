FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# EasyOrder

REST APIs for Project [EasyOrder](https://github.com/DeliciousFoodEasyOrder).

## OAuth Collection [/oauth]

### Password Grant [POST /oauth/token{?grant_type,username,password,scope}]

+ Parameters

    + grant_type : `password` (string, required) - Fixed, must be "password"

    + username : `example@email.com` (string, required) - Email or Phone

    + password : `password` (string, required) - Password

    + scope : `read+write` (string) - Scope
    
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"认证成功",
            "data":{
                "access_token":"xxxx.yyyy.zzzz",
                "token_type":"bearer",
                "expires_in":259200,
                "refresh_token":"",
                "scope":""
            }
        }

## Merchant Collection [/merchants]

### Get a merchant [GET /merchants{?email,phone}]

+ Parameters

    + email : `example@email.com` (string) - Email

    + phone : `12345678901` (string) - Phone
    
+ Request

    + Headers

            Authorization: Bearer xxxx.yyyy.zzzz
            
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取商户信息成功",
            "data":{
                "merchant_id":1,
                "email":"example@email.com",
                "phone":"12345678901",
                "password":"password"
            }
        }

### Create a merchant [POST /merchants]

+ Request (application/json)

        {
            "merchant_id":null,
            "email":"example@email.com",
            "phone":"12345678901",
            "password":"password"
        }

+ Response 201 (application/json)

        {
            "code":201,
            "msg":"商户注册成功",
            "data":{
                "merchant_id":1,
                "email":"example@email.com",
                "phone":"12345678901",
                "password":"password"
            }
        }

## Order Collection [/orders]

### List orders by merchant id [GET /orders{?merchant_id,status}]

+ Parameters

    + merchant_id : 1 (int, required) - Merchant ID

    + status : 1 (int) - 已完成:1, 正在做:2

+ Request

    + Headers
        
            Authorization: Bearer xxxx.yyyy.zzzz

+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取订单列表成功",
            "data":[{
                "order_id":1,
                "status":1,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                },{
                    "food_id":2,
                    "name":"兰州拉面",
                    "description":"清真的拉面",
                    "price":"39.99",
                    "merchant_id":1,
                    "amount":1
                }]
            },{
                "order_id":2,
                "status":2,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                }]
            }]
        }
        
### List orders by customer id [GET /orders{?customer_id,status}]

+ Parameters

    + customer_id : 1 (int, required) - Customer ID

    + status : 1 (int) - 已完成:1, 正在做:2

+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取订单列表成功",
            "data":[{
                "order_id":1,
                "status":1,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                },{
                    "food_id":2,
                    "name":"兰州拉面",
                    "description":"清真的拉面",
                    "price":"39.99",
                    "merchant_id":1,
                    "amount":1
                }]
            },{
                "order_id":2,
                "status":2,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                }]
            }]
        }
        
### Get an order [GET /orders/{id}]

+ Parameters

    + id : 1 (int, required) - Order ID

+ Request

    + Headers
        
            Authorization: Bearer xxxx.yyyy.zzzz
            
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取订单成功",
            "data":{
                "order_id":1,
                "status":0,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                },{
                    "food_id":2,
                    "name":"兰州拉面",
                    "description":"清真的拉面",
                    "price":"39.99",
                    "merchant_id":1,
                    "amount":2
                }]
            }
        }
        
### Create an order [POST /orders]

+ Request (application/json)
            
    + Body
            
            {
                "order_id":null,
                "status":0,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                },{
                    "food_id":2,
                    "name":"兰州拉面",
                    "description":"清真的拉面",
                    "price":"39.99",
                    "merchant_id":1,
                    "amount":1
                }]
            }
            
+ Response 201 (application/json)

        {
            "code":201,
            "msg":"创建订单成功",
            "data":{
                "order_id":1,
                "status":0,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                },{
                    "food_id":2,
                    "name":"兰州拉面",
                    "description":"清真的拉面",
                    "price":"39.99",
                    "merchant_id":1,
                    "amount":1
                }]
            }
        }
        
### Update an order partially [PATCH /orders/{id}]

+ Parameters

    + id : 1 (int, required) - Order ID

+ Request (application/json)

    + Headers
        
            Authorization: Bearer xxxx.yyyy.zzzz
            
    + Body
    
            {
                "status":0
            }

+ Response 201 (application/json)

        {
            "code":201,
            "msg":"修改订单成功",
            "data":{
                "order_id":1,
                "status":0,
                "seat_id":1,
                "customer_id":1,
                "merchant_id":1,
                "order_time":"2018-01-01T12:00:00+08:00",
                "complete_time":"2018-01-02T12:00:00+08:00",
                "foods":[{
                    "food_id":1,
                    "name":"鱼香肉丝",
                    "description":"香喷喷的鱼香肉丝",
                    "price":"9.99",
                    "merchant_id":1,
                    "amount":2
                },{
                    "food_id":2,
                    "name":"兰州拉面",
                    "description":"清真的拉面",
                    "price":"39.99",
                    "merchant_id":1,
                    "amount":1
                }]
            }
        }
        
## Seat Collection [/seats]

### List seats [GET /seats{?merchant_id}]

+ Parameters

    + merchant_id : 1 (int, required) - Merchant ID
    
+ Request

    + Headers
        
            Authorization: Bearer xxxx.yyyy.zzzz
            
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取商家座位信息成功",
            "data":[{
                "seat_id":1,
                "number":"1A",
                "qr_code_url":"https://www.example.com",
                "merchant_id":1
            },{
                "seat_id":2,
                "number":"1B",
                "qr_code_url":"https://www.example.com",
                "merchant_id":1
            }]
        }
        
### Create a seat [POST /seats]
    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer xxxx.yyyy.zzzz
            
    + Body
    
            {
                "seat_id":null,
                "number":"2A",
                "qr_code_url":"https://www.example.com",
                "merchant_id":1
            }
            
+ Response 201 (application/json)

        {
            "code":201,
            "msg":"新建座位成功",
            "data":{
                "seat_id":2,
                "number":"2A",
                "qr_code_url":"https://www.example.com",
                "merchant_id":1
            }
        }

### Delete a seat [DELETE /seats/{seat_id}]

+ Parameters

    + seat_id : 1 (int, required) - Seat ID
    
+ Request

    + Headers
        
            Authorization: Bearer xxxx.yyyy.zzzz
            
+ Response 204

## Food Collection [/foods]

### List foods [GET /foods{?merchant_id}]

+ Parameters

    + merchant_id : 1 (int, required) - Merchant ID
            
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取菜单成功",
            "data":[{
                "food_id":1,
                "name":"鱼香肉丝",
                "description":"香喷喷的鱼香肉丝",
                "price":"9.99",
                "merchant_id":1
            },{
                "food_id":2,
                "name":"兰州拉面",
                "description":"清真的拉面",
                "price":"39.99",
                "merchant_id":1
            }]
        }

### Get a food [GET /foods/{food_id}]

+ Parameters

    + food_id : 1 (int, required) - Food ID
    
+ Request

    + Headers
    
            Authorization: Bearer xxxx.yyyy.zzzz
            
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取菜品成功",
            "data":{
                "food_id":1,
                "name":"鱼香肉丝",
                "description":"香喷喷的鱼香肉丝",
                "price":"9.99",
                "merchant_id":1
            }
        }

### Create a food [POST /foods]

+ Request (application/json)

    + Headers

            Authorization: Bearer xxxx.yyyy.zzzz

    + Body
    
            {
                "food_id":null,
                "name":"香菇牛肉",
                "description":"好食又好看",
                "price":"13.00",
                "merchant_id":1
            }
            
+ Response 201 (application/json)

        {
            "code":201,
            "msg":"创建菜品成功",
            "data":{
                "food_id":2,
                "name":"香菇牛肉",
                "description":"好食又好看",
                "price":"13.00",
                "merchant_id":1
            }
        }
        
### Delete a food [DELETE /foods/{food_id}]

+ Parameters

    + food_id : 1 (int, required) - Food ID

+ Request (application/json)

    + Headers
    
            Authorization: Bearer xxxx.yyyy.zzzz

+ Response 204

## Customer Collection [/customers]

### Get a Customer [GET /customers/{customer_id}]

+ Parameters

    + customer_id : 1 (int, required) - Customer ID
    
+ Response 200 (application/json)

        {
            "code":200,
            "msg":"获取用户成功",
            "data":{
                "customer_id":1,
                "wechat_id":"asdf",
                "balance":0.00
            }
        }

### Create a customer [POST /customers]

+ Request (application/json)

    + Body
    
            {
                "customer_id":null,
                "wechat_id":"asdf",
                "balance":0.00
            }
            
+ Response 201 (application/json)

        {
            "code":201,
            "msg":"创建用户成功",
            "balance":0.00
        }

### Update a customer partially [PATCH /customers/{customer_id}]

+ Parameters

    + customer_id : 1 (int, required) - Customer ID

+ Request (application/json)

    + Body
    
            {
                "balance":100.00
            }
            
+ Response 201 (application/json)

        {
            "code":201,
            "msg":"修改用户成功",
            "data":{
                "customer_id":1,
                "wechat_id":"asdf",
                "balance":100.00
            }
        }